Sub QuickSortArrayByMixedValuesTwoColumns()
    ' 2次元配列のデータをサンプルとして定義（2列）
    Dim data As Variant
    data = Array( _
        Array(1, "D100-A500"), _
        Array(2, "C200-A300"), _
        Array(3, "A300-D100"), _
        Array(4, "B400-C200"), _
        Array(5, "A100-B500"), _
        Array(6, "C200-A600") _
    )
    
    ' クイックソートで、2列目のハイフン前後に基づいてソート
    ' ハイフン前の部分：昇順 (ASC)
    ' ハイフン後の部分：昇順 (ASC)
    QuickSort2DArrayByHyphen data, 0, UBound(data), 2, "ASC", "ASC"

    ' ソート後の結果を確認
    Dim i As Long
    For i = LBound(data) To UBound(data)
        Debug.Print data(i)(0), data(i)(1)
    Next i
End Sub

' クイックソート: 中央値ピボットを選んで、ハイフン前後部分のソート順を指定してソート
Sub QuickSort2DArrayByHyphen(arr As Variant, low As Long, high As Long, sortColumn As Integer, orderBefore As String, orderAfter As String)
    Dim pivotIndex As Long
    If low < high Then
        ' パーティションを行い、ピボット位置を取得
        pivotIndex = Partition(arr, low, high, sortColumn, orderBefore, orderAfter)
        ' ピボットを基準に左右で再帰的にクイックソートを行う
        QuickSort2DArrayByHyphen arr, low, pivotIndex - 1, sortColumn, orderBefore, orderAfter
        QuickSort2DArrayByHyphen arr, pivotIndex + 1, high, sortColumn, orderBefore, orderAfter
    End If
End Sub

' パーティションを行い、ハイフン前後部分のソート順を指定してソート
Function Partition(arr As Variant, low As Long, high As Long, sortColumn As Integer, orderBefore As String, orderAfter As String) As Long
    Dim pivot As Variant
    Dim i As Long, j As Long
    Dim temp As Variant
    Dim pivotBeforeAlph As String, pivotBeforeNum As Long
    Dim pivotAfterAlph As String, pivotAfterNum As Long
    Dim currentBeforeAlph As String, currentBeforeNum As Long
    Dim currentAfterAlph As String, currentAfterNum As Long
    Dim pivotValue As String, currentValue As String
    
    ' 中央値ピボットを選ぶ
    pivotValue = arr(high)(sortColumn - 1)
    Call SplitAlphNum(pivotValue, pivotBeforeAlph, pivotBeforeNum, pivotAfterAlph, pivotAfterNum)
    
    i = low - 1
    For j = low To high - 1
        currentValue = arr(j)(sortColumn - 1)
        Call SplitAlphNum(currentValue, currentBeforeAlph, currentBeforeNum, currentAfterAlph, currentAfterNum)
        
        ' ハイフン前部分での比較
        If CompareAlphNum(currentBeforeAlph, currentBeforeNum, pivotBeforeAlph, pivotBeforeNum, orderBefore) Then
            i = i + 1
            temp = arr(i)
            arr(i) = arr(j)
            arr(j) = temp
        ' ハイフン前が同じ場合、ハイフン後部分での比較
        ElseIf currentBeforeAlph = pivotBeforeAlph And currentBeforeNum = pivotBeforeNum Then
            If CompareAlphNum(currentAfterAlph, currentAfterNum, pivotAfterAlph, pivotAfterNum, orderAfter) Then
                i = i + 1
                temp = arr(i)
                arr(i) = arr(j)
                arr(j) = temp
            End If
        End If
    Next j
    
    ' ピボットを適切な位置に移動
    temp = arr(i + 1)
    arr(i + 1) = arr(high)
    arr(high) = temp
    
    Partition = i + 1
End Function

' アルファベット部分と数値部分を分割する関数
Sub SplitAlphNum(value As String, ByRef alphBefore As String, ByRef numBefore As Long, ByRef alphAfter As String, ByRef numAfter As Long)
    Dim parts() As String
    parts = Split(value, "-")
    
    ' ハイフン前の部分
    alphBefore = ExtractAlph(parts(0))
    numBefore = ExtractNum(parts(0))
    
    ' ハイフン後の部分
    alphAfter = ExtractAlph(parts(1))
    numAfter = ExtractNum(parts(1))
End Sub

' アルファベット部分を抽出する関数
Function ExtractAlph(value As String) As String
    Dim i As Long
    For i = 1 To Len(value)
        If Not IsNumeric(Mid(value, i, 1)) Then
            ExtractAlph = ExtractAlph & Mid(value, i, 1)
        End If
    Next i
End Function

' 数値部分を抽出する関数
Function ExtractNum(value As String) As Long
    Dim i As Long
    Dim numStr As String
    For i = 1 To Len(value)
        If IsNumeric(Mid(value, i, 1)) Then
            numStr = numStr & Mid(value, i, 1)
        End If
    Next i
    If numStr <> "" Then
        ExtractNum = CLng(numStr)
    Else
        ExtractNum = 0
    End If
End Function

' アルファベットと数値部分を比較する関数
Function CompareAlphNum(alph1 As String, num1 As Long, alph2 As String, num2 As Long, order As String) As Boolean
    If order = "ASC" Then
        If alph1 < alph2 Or (alph1 = alph2 And num1 < num2) Then
            CompareAlphNum = True
        Else
            CompareAlphNum = False
        End If
    ElseIf order = "DESC" Then
        If alph1 > alph2 Or (alph1 = alph2 And num1 > num2) Then
            CompareAlphNum = True
        Else
            CompareAlphNum = False
        End If
    End If
End Function

' 中央値ピボットを選択する: 最初、中央、最後の値の中央値を選ぶ
Function MedianOfThree(arr As Variant, low As Long, high As Long, sortColumn As Integer) As Variant
    Dim mid As Long
    mid = (low + high) \ 2
    
    ' 最初、中央、最後の3つの要素を取得
    Dim lowVal As Variant, midVal As Variant, highVal As Variant
    lowVal = arr(low)
    midVal = arr(mid)
    highVal = arr(high)
    
    ' 中央値を選択する
    If (lowVal(sortColumn - 1) > midVal(sortColumn - 1)) Xor (lowVal(sortColumn - 1) > highVal(sortColumn - 1)) Then
        MedianOfThree = lowVal
    ElseIf (midVal(sortColumn - 1) > lowVal(sortColumn - 1)) Xor (midVal(sortColumn - 1) > highVal(sortColumn - 1)) Then
        MedianOfThree = midVal
    Else
        MedianOfThree = highVal
    End If
End Function
