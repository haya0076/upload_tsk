Option Explicit

' リストの各要素に対して関数を適用し、結果のリストを返す関数
Function Map(fn As String, list As Variant) As Variant
    Dim result() As Variant
    Dim i As Long
    
    ReDim result(1 To UBound(list))
    
    For i = LBound(list) To UBound(list)
        result(i) = Application.Run(fn, list(i))
    Next i
    
    Map = result
End Function

' リストの要素を絞り込み、条件を満たす要素のみを含むリストを返す関数
Function Filter(fn As String, list As Variant) As Variant
    Dim result() As Variant
    Dim i As Long
    Dim count As Long
    
    For i = LBound(list) To UBound(list)
        If Application.Run(fn, list(i)) Then
            count = count + 1
            ReDim Preserve result(1 To count)
            result(count) = list(i)
        End If
    Next i
    
    Filter = result
End Function

' リストの各要素を畳み込んで単一の値を返す関数
Function Reduce(fn As String, list As Variant, initialValue As Variant) As Variant
    Dim result As Variant
    Dim i As Long
    
    result = initialValue
    
    For i = LBound(list) To UBound(list)
        result = Application.Run(fn, result, list(i))
    Next i
    
    Reduce = result
End Function

' 関数プログラミングのサンプル
Sub FunctionalProgrammingExample()
    Dim numbers() As Variant
    Dim doubledNumbers() As Variant
    Dim filteredNumbers() As Variant
    Dim sum As Variant
    
    ' 数値のリストを作成
    numbers = Array(1, 2, 3, 4, 5)
    
    ' 各要素を2倍する
    doubledNumbers = Map("DoubleNumber", numbers)
    
    ' 偶数の要素のみをフィルタリングする
    filteredNumbers = Filter("IsEven", numbers)
    
    ' 合計値を計算する
    sum = Reduce("SumNumbers", numbers, 0)
    
    ' 結果を表示
    MsgBox "Doubled Numbers: " & Join(doubledNumbers, ",") & vbNewLine & _
           "Filtered Numbers: " & Join(filteredNumbers, ",") & vbNewLine & _
           "Sum: " & sum
End Sub

' 各要素を2倍にする関数
Function DoubleNumber(value As Variant) As Variant
    DoubleNumber = value * 2
End Function

' 偶数判定の関数
Function IsEven(value As Variant) As Boolean
    IsEven = value Mod 2 = 0
End Function

' 数値の合計を計算する関数
Function SumNumbers(sum As Variant, value As Variant) As Variant
    SumNumbers = sum + value
End Function
